/** Generated by the default template from graphql-java-generator */
package cn.zy.client;

import java.util.HashMap;
import java.util.Map;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.graphql_java_generator.annotation.GraphQLNonScalar;
import com.graphql_java_generator.annotation.GraphQLObjectType;
import com.graphql_java_generator.annotation.GraphQLScalar;

/**
 *
 * @author generated by graphql-java-generator
 * @see <a href="https://github.com/graphql-java-generator/graphql-java-generator">https://github.com/graphql-java-generator/graphql-java-generator</a>
 */
@GraphQLObjectType("IntRangeUnitMeasurementValue")
@JsonInclude(Include.NON_NULL)
@SuppressWarnings("unused")
public class IntRangeUnitMeasurementValue 
	implements UnitMeasurementValue, MeasurementValue, FormattedMarketingValue{

	/**
	 * This map contains the deserialized values for the alias, as parsed from the json response from the GraphQL
	 * server. The key is the alias name, the value is the deserialiazed value (taking into account custom scalars,
	 * lists, ...)
	 */
	@com.graphql_java_generator.annotation.GraphQLIgnore
	Map<String, Object> aliasValues = new HashMap<>();

	public IntRangeUnitMeasurementValue(){
		// No action
	}

	@JsonProperty("from")
	@GraphQLNonScalar(fieldName = "from", graphQLTypeSimpleName = "FormattedInt", javaClass = FormattedInt.class)
	FormattedInt from;


	@JsonProperty("to")
	@GraphQLNonScalar(fieldName = "to", graphQLTypeSimpleName = "FormattedInt", javaClass = FormattedInt.class)
	FormattedInt to;


	@JsonProperty("displayInMarketplace")
	@GraphQLScalar(fieldName = "displayInMarketplace", graphQLTypeSimpleName = "Boolean", javaClass = Boolean.class)
	Boolean displayInMarketplace;


	@JsonProperty("formatted")
	@GraphQLNonScalar(fieldName = "formatted", graphQLTypeSimpleName = "TranslatedText", javaClass = TranslatedText.class)
	TranslatedText formatted;


	@JsonProperty("formattedInMarketplace")
	@GraphQLNonScalar(fieldName = "formattedInMarketplace", graphQLTypeSimpleName = "TranslatedText", javaClass = TranslatedText.class)
	TranslatedText formattedInMarketplace;


	@JsonProperty("formattedWithUnit")
	@GraphQLNonScalar(fieldName = "formattedWithUnit", graphQLTypeSimpleName = "TranslatedText", javaClass = TranslatedText.class)
	TranslatedText formattedWithUnit;


	@JsonProperty("unit")
	@GraphQLNonScalar(fieldName = "unit", graphQLTypeSimpleName = "TranslatedText", javaClass = TranslatedText.class)
	TranslatedText unit;


	@JsonProperty("__typename")
	@GraphQLScalar(fieldName = "__typename", graphQLTypeSimpleName = "String", javaClass = String.class)
	String __typename;



	public void setFrom(FormattedInt from) {
		this.from = from;
	}

	public FormattedInt getFrom() {
		return from;
	}
		

	public void setTo(FormattedInt to) {
		this.to = to;
	}

	public FormattedInt getTo() {
		return to;
	}
		


	/**
	 */
	@Override
	public void setDisplayInMarketplace(Boolean displayInMarketplace) {
		if (displayInMarketplace == null || displayInMarketplace instanceof Boolean) {
			this.displayInMarketplace = (Boolean) displayInMarketplace;
		} else {
			throw new IllegalArgumentException("The given displayInMarketplace should be an instance of java.lang.Boolean, but is an instance of "
					+ displayInMarketplace.getClass().getName());
		}
	}
 

	/**
	 */
	@Override
	public Boolean getDisplayInMarketplace() {
		return displayInMarketplace;
	}


	/**
	 */
	@Override
	public void setFormatted(TranslatedText formatted) {
		if (formatted == null || formatted instanceof TranslatedText) {
			this.formatted = (TranslatedText) formatted;
		} else {
			throw new IllegalArgumentException("The given formatted should be an instance of cn.zy.client.TranslatedText, but is an instance of "
					+ formatted.getClass().getName());
		}
	}
 

	/**
	 */
	@Override
	public TranslatedText getFormatted() {
		return formatted;
	}


	/**
	 */
	@Override
	public void setFormattedInMarketplace(TranslatedText formattedInMarketplace) {
		if (formattedInMarketplace == null || formattedInMarketplace instanceof TranslatedText) {
			this.formattedInMarketplace = (TranslatedText) formattedInMarketplace;
		} else {
			throw new IllegalArgumentException("The given formattedInMarketplace should be an instance of cn.zy.client.TranslatedText, but is an instance of "
					+ formattedInMarketplace.getClass().getName());
		}
	}
 

	/**
	 */
	@Override
	public TranslatedText getFormattedInMarketplace() {
		return formattedInMarketplace;
	}


	/**
	 */
	@Override
	public void setFormattedWithUnit(TranslatedText formattedWithUnit) {
		if (formattedWithUnit == null || formattedWithUnit instanceof TranslatedText) {
			this.formattedWithUnit = (TranslatedText) formattedWithUnit;
		} else {
			throw new IllegalArgumentException("The given formattedWithUnit should be an instance of cn.zy.client.TranslatedText, but is an instance of "
					+ formattedWithUnit.getClass().getName());
		}
	}
 

	/**
	 */
	@Override
	public TranslatedText getFormattedWithUnit() {
		return formattedWithUnit;
	}


	/**
	 */
	@Override
	public void setUnit(TranslatedText unit) {
		if (unit == null || unit instanceof TranslatedText) {
			this.unit = (TranslatedText) unit;
		} else {
			throw new IllegalArgumentException("The given unit should be an instance of cn.zy.client.TranslatedText, but is an instance of "
					+ unit.getClass().getName());
		}
	}
 

	/**
	 */
	@Override
	public TranslatedText getUnit() {
		return unit;
	}


	/**
	 */
	@Override
	public void set__typename(String __typename) {
		if (__typename == null || __typename instanceof String) {
			this.__typename = (String) __typename;
		} else {
			throw new IllegalArgumentException("The given __typename should be an instance of java.lang.String, but is an instance of "
					+ __typename.getClass().getName());
		}
	}
 

	/**
	 */
	@Override
	public String get__typename() {
		return __typename;
	}

 
	/**
	 * This method is called during the json deserialization process, by the {@link GraphQLObjectMapper}, each time an
	 * alias value is read from the json.
	 * 
	 * @param aliasName
	 * @param aliasDeserializedValue
	 */
	public void setAliasValue(String aliasName, Object aliasDeserializedValue) {
		aliasValues.put(aliasName, aliasDeserializedValue);
	}

	/**
	 * Retrieves the value for the given alias, as it has been received for this object in the GraphQL response. <BR/>
	 * This method <B>should not be used for Custom Scalars</B>, as the parser doesn't know if this alias is a custom
	 * scalar, and which custom scalar to use at deserialization time. In most case, a value will then be provided by
	 * this method with a basis json deserialization, but this value won't be the proper custom scalar value.
	 * 
	 * @param alias
	 * @return
	 */
	public Object getAliasValue(String alias) {
		return aliasValues.get(alias);
	}

    public String toString() {
        return "IntRangeUnitMeasurementValue {"
				+ "from: " + from
				+ ", "
				+ "to: " + to
				+ ", "
				+ "displayInMarketplace: " + displayInMarketplace
				+ ", "
				+ "formatted: " + formatted
				+ ", "
				+ "formattedInMarketplace: " + formattedInMarketplace
				+ ", "
				+ "formattedWithUnit: " + formattedWithUnit
				+ ", "
				+ "unit: " + unit
				+ ", "
				+ "__typename: " + __typename
        		+ "}";
    }

	public static Builder builder() {
		return new Builder();
	}

	/**
	 * The Builder that helps building instance of this POJO. You can get an instance of this class, by calling the
	 * {@link #builder()}
	 */
	public static class Builder {
		private FormattedInt from;
		private FormattedInt to;
		private Boolean displayInMarketplace;
		private TranslatedText formatted;
		private TranslatedText formattedInMarketplace;
		private TranslatedText formattedWithUnit;
		private TranslatedText unit;

		public Builder withFrom(FormattedInt from) {
			this.from = from;
			return this;
		}
		public Builder withTo(FormattedInt to) {
			this.to = to;
			return this;
		}
		public Builder withDisplayInMarketplace(Boolean displayInMarketplace) {
			this.displayInMarketplace = displayInMarketplace;
			return this;
		}
		public Builder withFormatted(TranslatedText formatted) {
			this.formatted = formatted;
			return this;
		}
		public Builder withFormattedInMarketplace(TranslatedText formattedInMarketplace) {
			this.formattedInMarketplace = formattedInMarketplace;
			return this;
		}
		public Builder withFormattedWithUnit(TranslatedText formattedWithUnit) {
			this.formattedWithUnit = formattedWithUnit;
			return this;
		}
		public Builder withUnit(TranslatedText unit) {
			this.unit = unit;
			return this;
		}

		public IntRangeUnitMeasurementValue build() {
			IntRangeUnitMeasurementValue _object = new IntRangeUnitMeasurementValue();
			_object.setFrom(from);
			_object.setTo(to);
			_object.setDisplayInMarketplace(displayInMarketplace);
			_object.setFormatted(formatted);
			_object.setFormattedInMarketplace(formattedInMarketplace);
			_object.setFormattedWithUnit(formattedWithUnit);
			_object.setUnit(unit);
			_object.set__typename("IntRangeUnitMeasurementValue");
			return _object;
		}
	}
}
