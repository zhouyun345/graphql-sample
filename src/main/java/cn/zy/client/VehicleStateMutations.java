/** Generated by the default template from graphql-java-generator */
package cn.zy.client;

import java.util.HashMap;
import java.util.Map;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.graphql_java_generator.annotation.GraphQLNonScalar;
import com.graphql_java_generator.annotation.GraphQLObjectType;
import com.graphql_java_generator.annotation.GraphQLScalar;

/**
 *
 * @author generated by graphql-java-generator
 * @see <a href="https://github.com/graphql-java-generator/graphql-java-generator">https://github.com/graphql-java-generator/graphql-java-generator</a>
 */
@GraphQLObjectType("VehicleStateMutations")
@JsonInclude(Include.NON_NULL)
@SuppressWarnings("unused")
public class VehicleStateMutations 
{

	/**
	 * This map contains the deserialized values for the alias, as parsed from the json response from the GraphQL
	 * server. The key is the alias name, the value is the deserialiazed value (taking into account custom scalars,
	 * lists, ...)
	 */
	@com.graphql_java_generator.annotation.GraphQLIgnore
	Map<String, Object> aliasValues = new HashMap<>();

	public VehicleStateMutations(){
		// No action
	}

	@JsonProperty("engine")
	@GraphQLNonScalar(fieldName = "engine", graphQLTypeSimpleName = "EngineMutations", javaClass = EngineMutations.class)
	EngineMutations engine;


	@JsonProperty("equipment")
	@GraphQLNonScalar(fieldName = "equipment", graphQLTypeSimpleName = "EquipmentMutations", javaClass = EquipmentMutations.class)
	EquipmentMutations equipment;


	@JsonProperty("exteriorColor")
	@GraphQLNonScalar(fieldName = "exteriorColor", graphQLTypeSimpleName = "ExteriorColorMutations", javaClass = ExteriorColorMutations.class)
	ExteriorColorMutations exteriorColor;


	@JsonProperty("interior")
	@GraphQLNonScalar(fieldName = "interior", graphQLTypeSimpleName = "InteriorMutations", javaClass = InteriorMutations.class)
	InteriorMutations interior;


	@JsonProperty("orderType")
	@GraphQLNonScalar(fieldName = "orderType", graphQLTypeSimpleName = "OrderTypeMutations", javaClass = OrderTypeMutations.class)
	OrderTypeMutations orderType;


	@JsonProperty("roofColor")
	@GraphQLNonScalar(fieldName = "roofColor", graphQLTypeSimpleName = "RoofColorMutations", javaClass = RoofColorMutations.class)
	RoofColorMutations roofColor;


	@JsonProperty("transmission")
	@GraphQLNonScalar(fieldName = "transmission", graphQLTypeSimpleName = "TransmissionMutations", javaClass = TransmissionMutations.class)
	TransmissionMutations transmission;


	@JsonProperty("wheels")
	@GraphQLNonScalar(fieldName = "wheels", graphQLTypeSimpleName = "WheelsMutations", javaClass = WheelsMutations.class)
	WheelsMutations wheels;


	@JsonProperty("__typename")
	@GraphQLScalar(fieldName = "__typename", graphQLTypeSimpleName = "String", javaClass = String.class)
	String __typename;



	public void setEngine(EngineMutations engine) {
		this.engine = engine;
	}

	public EngineMutations getEngine() {
		return engine;
	}
		

	public void setEquipment(EquipmentMutations equipment) {
		this.equipment = equipment;
	}

	public EquipmentMutations getEquipment() {
		return equipment;
	}
		

	public void setExteriorColor(ExteriorColorMutations exteriorColor) {
		this.exteriorColor = exteriorColor;
	}

	public ExteriorColorMutations getExteriorColor() {
		return exteriorColor;
	}
		

	public void setInterior(InteriorMutations interior) {
		this.interior = interior;
	}

	public InteriorMutations getInterior() {
		return interior;
	}
		

	public void setOrderType(OrderTypeMutations orderType) {
		this.orderType = orderType;
	}

	public OrderTypeMutations getOrderType() {
		return orderType;
	}
		

	public void setRoofColor(RoofColorMutations roofColor) {
		this.roofColor = roofColor;
	}

	public RoofColorMutations getRoofColor() {
		return roofColor;
	}
		

	public void setTransmission(TransmissionMutations transmission) {
		this.transmission = transmission;
	}

	public TransmissionMutations getTransmission() {
		return transmission;
	}
		

	public void setWheels(WheelsMutations wheels) {
		this.wheels = wheels;
	}

	public WheelsMutations getWheels() {
		return wheels;
	}
		

	public void set__typename(String __typename) {
		this.__typename = __typename;
	}

	public String get__typename() {
		return __typename;
	}
		

 
	/**
	 * This method is called during the json deserialization process, by the {@link GraphQLObjectMapper}, each time an
	 * alias value is read from the json.
	 * 
	 * @param aliasName
	 * @param aliasDeserializedValue
	 */
	public void setAliasValue(String aliasName, Object aliasDeserializedValue) {
		aliasValues.put(aliasName, aliasDeserializedValue);
	}

	/**
	 * Retrieves the value for the given alias, as it has been received for this object in the GraphQL response. <BR/>
	 * This method <B>should not be used for Custom Scalars</B>, as the parser doesn't know if this alias is a custom
	 * scalar, and which custom scalar to use at deserialization time. In most case, a value will then be provided by
	 * this method with a basis json deserialization, but this value won't be the proper custom scalar value.
	 * 
	 * @param alias
	 * @return
	 */
	public Object getAliasValue(String alias) {
		return aliasValues.get(alias);
	}

    public String toString() {
        return "VehicleStateMutations {"
				+ "engine: " + engine
				+ ", "
				+ "equipment: " + equipment
				+ ", "
				+ "exteriorColor: " + exteriorColor
				+ ", "
				+ "interior: " + interior
				+ ", "
				+ "orderType: " + orderType
				+ ", "
				+ "roofColor: " + roofColor
				+ ", "
				+ "transmission: " + transmission
				+ ", "
				+ "wheels: " + wheels
				+ ", "
				+ "__typename: " + __typename
        		+ "}";
    }

	public static Builder builder() {
		return new Builder();
	}

	/**
	 * The Builder that helps building instance of this POJO. You can get an instance of this class, by calling the
	 * {@link #builder()}
	 */
	public static class Builder {
		private EngineMutations engine;
		private EquipmentMutations equipment;
		private ExteriorColorMutations exteriorColor;
		private InteriorMutations interior;
		private OrderTypeMutations orderType;
		private RoofColorMutations roofColor;
		private TransmissionMutations transmission;
		private WheelsMutations wheels;

		public Builder withEngine(EngineMutations engine) {
			this.engine = engine;
			return this;
		}
		public Builder withEquipment(EquipmentMutations equipment) {
			this.equipment = equipment;
			return this;
		}
		public Builder withExteriorColor(ExteriorColorMutations exteriorColor) {
			this.exteriorColor = exteriorColor;
			return this;
		}
		public Builder withInterior(InteriorMutations interior) {
			this.interior = interior;
			return this;
		}
		public Builder withOrderType(OrderTypeMutations orderType) {
			this.orderType = orderType;
			return this;
		}
		public Builder withRoofColor(RoofColorMutations roofColor) {
			this.roofColor = roofColor;
			return this;
		}
		public Builder withTransmission(TransmissionMutations transmission) {
			this.transmission = transmission;
			return this;
		}
		public Builder withWheels(WheelsMutations wheels) {
			this.wheels = wheels;
			return this;
		}

		public VehicleStateMutations build() {
			VehicleStateMutations _object = new VehicleStateMutations();
			_object.setEngine(engine);
			_object.setEquipment(equipment);
			_object.setExteriorColor(exteriorColor);
			_object.setInterior(interior);
			_object.setOrderType(orderType);
			_object.setRoofColor(roofColor);
			_object.setTransmission(transmission);
			_object.setWheels(wheels);
			_object.set__typename("VehicleStateMutations");
			return _object;
		}
	}
}
