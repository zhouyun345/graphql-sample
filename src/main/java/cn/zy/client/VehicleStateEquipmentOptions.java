/** Generated by the default template from graphql-java-generator */
package cn.zy.client;

import java.util.HashMap;
import java.util.Map;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;

import cn.zy.client.util.CustomJacksonDeserializers;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.graphql_java_generator.annotation.GraphQLInputParameters;
import com.graphql_java_generator.annotation.GraphQLNonScalar;
import com.graphql_java_generator.annotation.GraphQLObjectType;
import com.graphql_java_generator.annotation.GraphQLScalar;
import java.util.List;

/**
 *
 * @author generated by graphql-java-generator
 * @see <a href="https://github.com/graphql-java-generator/graphql-java-generator">https://github.com/graphql-java-generator/graphql-java-generator</a>
 */
@GraphQLObjectType("VehicleStateEquipmentOptions")
@JsonInclude(Include.NON_NULL)
@SuppressWarnings("unused")
public class VehicleStateEquipmentOptions 
	implements EquipmentOptions{

	/**
	 * This map contains the deserialized values for the alias, as parsed from the json response from the GraphQL
	 * server. The key is the alias name, the value is the deserialiazed value (taking into account custom scalars,
	 * lists, ...)
	 */
	@com.graphql_java_generator.annotation.GraphQLIgnore
	Map<String, Object> aliasValues = new HashMap<>();

	public VehicleStateEquipmentOptions(){
		// No action
	}

	@JsonProperty("wheels")
	@GraphQLNonScalar(fieldName = "wheels", graphQLTypeSimpleName = "VehicleStateWheels", javaClass = VehicleStateWheels.class)
	VehicleStateWheels wheels;


	@JsonProperty("engine")
	@GraphQLNonScalar(fieldName = "engine", graphQLTypeSimpleName = "VehicleStateEquipment", javaClass = VehicleStateEquipment.class)
	VehicleStateEquipment engine;


	@JsonProperty("list")
	@JsonDeserialize(using = CustomJacksonDeserializers.ListVehicleStateEquipment.class)
	@GraphQLInputParameters(names = {"filter"}, types = {"VehicleStateEquipmentOptionsFilterInput"}, mandatories = {false}, listDepths = {0}, itemsMandatory = {false})
	@GraphQLNonScalar(fieldName = "list", graphQLTypeSimpleName = "VehicleStateEquipment", javaClass = VehicleStateEquipment.class)
	List<VehicleStateEquipment> list;


	@JsonProperty("transmission")
	@GraphQLNonScalar(fieldName = "transmission", graphQLTypeSimpleName = "VehicleStateEquipment", javaClass = VehicleStateEquipment.class)
	VehicleStateEquipment transmission;


	@JsonProperty("__typename")
	@GraphQLScalar(fieldName = "__typename", graphQLTypeSimpleName = "String", javaClass = String.class)
	String __typename;




	/**
	 */
	@Override
	public void setWheels(Wheels wheels) {
		if (wheels == null || wheels instanceof VehicleStateWheels) {
			this.wheels = (VehicleStateWheels) wheels;
		} else {
			throw new IllegalArgumentException("The given wheels should be an instance of cn.zy.client.VehicleStateWheels, but is an instance of "
					+ wheels.getClass().getName());
		}
	}
 

	/** 
	 * As the type declared in the class is not inherited from one of the implemented interfaces, we need a dedicated setter.
	 * 
	 * @param
	 */
	public void setWheels(VehicleStateWheels wheels) {
		this.wheels = wheels;
	}

	/**
	 */
	@Override
	public VehicleStateWheels getWheels() {
		return wheels;
	}

	public void setEngine(VehicleStateEquipment engine) {
		this.engine = engine;
	}

	public VehicleStateEquipment getEngine() {
		return engine;
	}
		

	public void setList(List<VehicleStateEquipment> list) {
		this.list = list;
	}

	public List<VehicleStateEquipment> getList() {
		return list;
	}
		

	public void setTransmission(VehicleStateEquipment transmission) {
		this.transmission = transmission;
	}

	public VehicleStateEquipment getTransmission() {
		return transmission;
	}
		


	/**
	 */
	@Override
	public void set__typename(String __typename) {
		if (__typename == null || __typename instanceof String) {
			this.__typename = (String) __typename;
		} else {
			throw new IllegalArgumentException("The given __typename should be an instance of java.lang.String, but is an instance of "
					+ __typename.getClass().getName());
		}
	}
 

	/**
	 */
	@Override
	public String get__typename() {
		return __typename;
	}

 
	/**
	 * This method is called during the json deserialization process, by the {@link GraphQLObjectMapper}, each time an
	 * alias value is read from the json.
	 * 
	 * @param aliasName
	 * @param aliasDeserializedValue
	 */
	public void setAliasValue(String aliasName, Object aliasDeserializedValue) {
		aliasValues.put(aliasName, aliasDeserializedValue);
	}

	/**
	 * Retrieves the value for the given alias, as it has been received for this object in the GraphQL response. <BR/>
	 * This method <B>should not be used for Custom Scalars</B>, as the parser doesn't know if this alias is a custom
	 * scalar, and which custom scalar to use at deserialization time. In most case, a value will then be provided by
	 * this method with a basis json deserialization, but this value won't be the proper custom scalar value.
	 * 
	 * @param alias
	 * @return
	 */
	public Object getAliasValue(String alias) {
		return aliasValues.get(alias);
	}

    public String toString() {
        return "VehicleStateEquipmentOptions {"
				+ "wheels: " + wheels
				+ ", "
				+ "engine: " + engine
				+ ", "
				+ "list: " + list
				+ ", "
				+ "transmission: " + transmission
				+ ", "
				+ "__typename: " + __typename
        		+ "}";
    }

	public static Builder builder() {
		return new Builder();
	}

	/**
	 * The Builder that helps building instance of this POJO. You can get an instance of this class, by calling the
	 * {@link #builder()}
	 */
	public static class Builder {
		private VehicleStateWheels wheels;
		private VehicleStateEquipment engine;
		private List<VehicleStateEquipment> list;
		private VehicleStateEquipment transmission;

		public Builder withWheels(VehicleStateWheels wheels) {
			this.wheels = wheels;
			return this;
		}
		public Builder withEngine(VehicleStateEquipment engine) {
			this.engine = engine;
			return this;
		}
		public Builder withList(List<VehicleStateEquipment> list) {
			this.list = list;
			return this;
		}
		public Builder withTransmission(VehicleStateEquipment transmission) {
			this.transmission = transmission;
			return this;
		}

		public VehicleStateEquipmentOptions build() {
			VehicleStateEquipmentOptions _object = new VehicleStateEquipmentOptions();
			_object.setWheels(wheels);
			_object.setEngine(engine);
			_object.setList(list);
			_object.setTransmission(transmission);
			_object.set__typename("VehicleStateEquipmentOptions");
			return _object;
		}
	}
}
