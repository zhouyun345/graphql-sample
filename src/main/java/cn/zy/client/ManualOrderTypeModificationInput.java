/** Generated by the default template from graphql-java-generator */
package cn.zy.client;

import java.util.HashMap;
import java.util.Map;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.graphql_java_generator.annotation.GraphQLInputType;
import com.graphql_java_generator.annotation.GraphQLNonScalar;
import com.graphql_java_generator.annotation.GraphQLScalar;

/**
 *
 * @author generated by graphql-java-generator
 * @see <a href="https://github.com/graphql-java-generator/graphql-java-generator">https://github.com/graphql-java-generator/graphql-java-generator</a>
 */
@GraphQLInputType("ManualOrderTypeModificationInput")
@JsonInclude(Include.NON_NULL)
@SuppressWarnings("unused")
public class ManualOrderTypeModificationInput 
{

	/**
	 * This map contains the deserialized values for the alias, as parsed from the json response from the GraphQL
	 * server. The key is the alias name, the value is the deserialiazed value (taking into account custom scalars,
	 * lists, ...)
	 */
	@com.graphql_java_generator.annotation.GraphQLIgnore
	Map<String, Object> aliasValues = new HashMap<>();

	public ManualOrderTypeModificationInput(){
		// No action
	}

	@JsonProperty("derivativeKey")
	@GraphQLScalar(fieldName = "derivativeKey", graphQLTypeSimpleName = "String", javaClass = String.class)
	String derivativeKey;


	@JsonProperty("driveTrain")
	@GraphQLScalar(fieldName = "driveTrain", graphQLTypeSimpleName = "DriveTrain", javaClass = DriveTrain.class)
	DriveTrain driveTrain;


	@JsonProperty("engineType")
	@GraphQLScalar(fieldName = "engineType", graphQLTypeSimpleName = "EngineType", javaClass = EngineType.class)
	EngineType engineType;


	@JsonProperty("modelGenerationKey")
	@GraphQLScalar(fieldName = "modelGenerationKey", graphQLTypeSimpleName = "String", javaClass = String.class)
	String modelGenerationKey;


	@JsonProperty("modelName")
	@GraphQLNonScalar(fieldName = "modelName", graphQLTypeSimpleName = "TranslatedTextInput", javaClass = TranslatedTextInput.class)
	TranslatedTextInput modelName;


	@JsonProperty("modelYear")
	@GraphQLScalar(fieldName = "modelYear", graphQLTypeSimpleName = "Int", javaClass = Integer.class)
	Integer modelYear;



	public void setDerivativeKey(String derivativeKey) {
		this.derivativeKey = derivativeKey;
	}

	public String getDerivativeKey() {
		return derivativeKey;
	}
		

	public void setDriveTrain(DriveTrain driveTrain) {
		this.driveTrain = driveTrain;
	}

	public DriveTrain getDriveTrain() {
		return driveTrain;
	}
		

	public void setEngineType(EngineType engineType) {
		this.engineType = engineType;
	}

	public EngineType getEngineType() {
		return engineType;
	}
		

	public void setModelGenerationKey(String modelGenerationKey) {
		this.modelGenerationKey = modelGenerationKey;
	}

	public String getModelGenerationKey() {
		return modelGenerationKey;
	}
		

	public void setModelName(TranslatedTextInput modelName) {
		this.modelName = modelName;
	}

	public TranslatedTextInput getModelName() {
		return modelName;
	}
		

	public void setModelYear(Integer modelYear) {
		this.modelYear = modelYear;
	}

	public Integer getModelYear() {
		return modelYear;
	}
		

 
	/**
	 * This method is called during the json deserialization process, by the {@link GraphQLObjectMapper}, each time an
	 * alias value is read from the json.
	 * 
	 * @param aliasName
	 * @param aliasDeserializedValue
	 */
	public void setAliasValue(String aliasName, Object aliasDeserializedValue) {
		aliasValues.put(aliasName, aliasDeserializedValue);
	}

	/**
	 * Retrieves the value for the given alias, as it has been received for this object in the GraphQL response. <BR/>
	 * This method <B>should not be used for Custom Scalars</B>, as the parser doesn't know if this alias is a custom
	 * scalar, and which custom scalar to use at deserialization time. In most case, a value will then be provided by
	 * this method with a basis json deserialization, but this value won't be the proper custom scalar value.
	 * 
	 * @param alias
	 * @return
	 */
	public Object getAliasValue(String alias) {
		return aliasValues.get(alias);
	}

    public String toString() {
        return "ManualOrderTypeModificationInput {"
				+ "derivativeKey: " + derivativeKey
				+ ", "
				+ "driveTrain: " + driveTrain
				+ ", "
				+ "engineType: " + engineType
				+ ", "
				+ "modelGenerationKey: " + modelGenerationKey
				+ ", "
				+ "modelName: " + modelName
				+ ", "
				+ "modelYear: " + modelYear
        		+ "}";
    }

	public static Builder builder() {
		return new Builder();
	}

	/**
	 * The Builder that helps building instance of this POJO. You can get an instance of this class, by calling the
	 * {@link #builder()}
	 */
	public static class Builder {
		private String derivativeKey;
		private DriveTrain driveTrain;
		private EngineType engineType;
		private String modelGenerationKey;
		private TranslatedTextInput modelName;
		private Integer modelYear;

		public Builder withDerivativeKey(String derivativeKey) {
			this.derivativeKey = derivativeKey;
			return this;
		}
		public Builder withDriveTrain(DriveTrain driveTrain) {
			this.driveTrain = driveTrain;
			return this;
		}
		public Builder withEngineType(EngineType engineType) {
			this.engineType = engineType;
			return this;
		}
		public Builder withModelGenerationKey(String modelGenerationKey) {
			this.modelGenerationKey = modelGenerationKey;
			return this;
		}
		public Builder withModelName(TranslatedTextInput modelName) {
			this.modelName = modelName;
			return this;
		}
		public Builder withModelYear(Integer modelYear) {
			this.modelYear = modelYear;
			return this;
		}

		public ManualOrderTypeModificationInput build() {
			ManualOrderTypeModificationInput _object = new ManualOrderTypeModificationInput();
			_object.setDerivativeKey(derivativeKey);
			_object.setDriveTrain(driveTrain);
			_object.setEngineType(engineType);
			_object.setModelGenerationKey(modelGenerationKey);
			_object.setModelName(modelName);
			_object.setModelYear(modelYear);
			return _object;
		}
	}
}
